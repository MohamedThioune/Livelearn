
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="<?php echo get_stylesheet_directory_uri();?>/style.css">
  <link rel="stylesheet" href="<?php echo get_stylesheet_directory_uri();?>/custom.css">

  <script src="https://kit.fontawesome.com/2def424b14.js" crossorigin="anonymous"></script>
  <title>Parse Course</title>
</head>

<body>

  <?php
  /** Template Name: xml parse */ 
 
  //Get the URL content
  $file = get_stylesheet_directory_uri()."/growth-20211024.2040.xml";
  $xml = simplexml_load_file($file);
  $data_xml = $xml->program;

  //Start inserting course 
  echo "<h2 class='titleGroupText'>RESUME <i class='fas fa-spinner fa-pulse'></i> </h2>";

$i = 0;
//Retrieve courses
foreach($data_xml as $datum){

    $data_locaties_xml = array();

    //Check the existing value with metadata
    $meta_key = "course";
    $meta_value = intval($datum->programClassification->programId);

    $meta_data = get_user_meta(1, $meta_key);

    $meta_xmls = array();
    foreach($meta_data as $value){
      $meta_xml = explode('-',$value)[0];
      array_push($meta_xmls, $meta_xml);
    }


    //Get the url media image to display on front
    foreach($datum->programDescriptions->media as $media)
      if($media->type == "image"){
        $image = $media->url;
        break;
      }

    $post = array(
      'short_description' =>  $datum->programDescriptions->programSummaryText,
      'long_description' => $datum->programDescriptions->programDescriptionHtml,
      'agenda' => $datum->programDescriptions->programDescriptionText,
      'url_image' =>  $image,
      'prijs' => $datum->programSchedule->genericProgramRun->cost->amount,
      'prijsvat' => $datum->programSchedule->genericProgramRun->cost->amountVAT,
      'degree' => $datum->programClassification->degree,
    );

    if(!in_array($meta_value, $meta_xmls)){ 
      
      //Get the dates and locaties 
      foreach($datum->programSchedule->programRun as $program){
        $date = new DateTime(strval($program->courseDay->date));
        //format date 
        $date = $date->format('d/m/Y');
        
        $info['start_date'] = strtotime($date . " ". strval($program->courseDay->startTime));
        $info['start_date'] = date("d/m/Y H:i:s", $info['start_date']);
    
        $info['end_date'] = strtotime($date . " ". strval($program->courseDay->endTime));
        $info['end_date'] = date("d/m/Y H:i:s", $info['end_date']); 
    
        $info['location'] = strval($program->courseDay->location->city);
    
        $info['adress'] = strval($program->courseDay->location->address);
    
        $infos = $info['start_date']. '-' . $info['end_date'] . '-' . $info['location'] . '-' . $info['adress'];
        
        array_push($data_locaties_xml, $infos);
      }

      //Data to create the course
      $post_data = array(
        'post_title' => $datum->programDescriptions->programName,
        'post_author' => get_current_user_id(),
        'post_type' => 'course',
        'post_status' => 'publish'
      );
 
      //Create the course
      $post_id = wp_insert_post($post_data);
      $courseid = $post_id;
      $meta = $meta_value . '-' . $courseid;

      /*
       * * Create for product course
      */
      $data = array(
        'post_author' => get_current_user_id(),
        'post_content' => ' ',
        'post_status' => 'publish',
        'post_title' => $datum->programDescriptions->programName,
        'post_parent' => '',
        'post_type' => 'product'
      );

      $product_id = wp_insert_post($data);

      //update course data as well
      update_post_meta( $post_id, 'connected_product', $product_id);
      wp_set_object_terms( $product_id, 'simple', 'product_type');
      update_post_meta( $product_id, '_visibility', 'visible' );
      update_post_meta( $product_id, '_virtual', 'yes');
      update_post_meta( $product_id, '_regular_price', intval($post['prijs']));
      update_post_meta( $product_id, '_price', intval($post['prijs']));
      update_post_meta( $product_id, '_manage_stock', "no" );

      /*
       * * end
      */
     
      if(add_user_meta(1, $meta_key, $meta))
        echo '✔️';

      //Get the url media image to display on front
      foreach($datum->programDescriptions->media as $media)
        if($media->type == "image"){
          $image = $media->url;
          break;
        }
      
      //Update custom fields for the post
      update_field('agenda', strval($post['agenda']), $post_id);
      update_field('price', intval($post['prijs']), $post_id);
      update_field('prijsvat', intval($post['prijsvat']), $post_id);
      update_field('url_image_xml', strval($post['url_image']), $post_id);
      update_field('short_description', strval($post['short_description']), $post_id);
      update_field('long_description', strval($post['long_description']), $post_id);
      update_field('degree', strval($post['degree']), $post_id);

      update_field('data_locaties_xml', $data_locaties_xml , $post_id);

        /*
        ** Course type
        */
        $title = explode(' ', strval($datum->programDescriptions->programName));
        if(in_array('masterclass:', $title) || in_array('Masterclass', $title)){
          update_field('course_type', 'masterclass', $post_id);
        }else if(in_array('Live', $title)){
          update_field('course_type', 'elearning', $post_id);
        }else{ 
          update_field('course_type', 'course', $post_id);
        }

      //for who - results - niveau
      echo "<span class='textOpleidRight'> Course_ID: " . $datum->programClassification->programId . " - Insertion done successfully <br><br></span>";
    }
    else{
      $meta_course = 0;
      foreach($meta_data as $value){
          $metax = explode('-',$value);
          if($metax[0] == $meta_value){
            $meta_course = $metax[1];
            break;
          }
        }

      $args = array(
        'post_type' => 'course', 
        'post_status' => 'publish',
        'include' => $meta_course,  
      );

      $course = get_posts($args);
      $meta = $meta_value . '-' . $meta_course;

      if(empty($course)){
        delete_user_meta(1, $meta_key, $meta);
        echo "****** Course # " . $meta_value . " not detected anymore<br><br>";
      }
      else{
        $change  = false;
        $message = 'field on change detected and applied<br><br>';

        //Update custom fields for the post
        $prijs = get_field('price', $meta_course);
        $prijsvat = get_field('prijsvat', $meta_course);
        $url_image = get_field('url_image_xml', $meta_course);
        $short_description = get_field('short_description', $meta_course);
        $long_description = get_field('long_description', $meta_course);
        $agenda = get_field('agenda', $meta_course);
        $degree = get_field('degree', $meta_course);

        /*  
        ** Course type
        */
        $title = explode(' ', strval($datum->programDescriptions->programName));
        if(in_array('masterclass:', $title) || in_array('Masterclass', $title)){
          update_field('course_type', 'masterclass', $meta_course);
        }else if(in_array('Live', $title)){
          update_field('course_type', 'elearning', $meta_course);
        }else{ 
          update_field('course_type', 'course', $meta_course);
        }

      
        echo "<span class='textLiDashboard'>Course_ID: " . $datum->programClassification->programId . " - Already in your database <br><span class='werkText'>Searching for changes ...</span><br></span>";
      
        if($prijs != intval($post['prijs'])){
          update_field('price', intval($post['prijs']), $meta_course);
          echo '****** Prijs - ' . $message; 
          $change = true;
        }
        if($prijsvat != intval($post['prijsvat'])){
          update_field('prijsvat', intval($post['prijsvat']), $meta_course);
          echo '****** Prijs VAT ' . $message; 
          $change = true;
        }
        if($url_image != strval($post['url_image'])){
          update_field('url_image_xml', strval($post['url_image']), $meta_course);
          echo '****** Image : url - ' . $message;
          $change = true; 
        }
        if($short_description != strval($post['short_description'])){
          update_field('short_description', strval($post['short_description']), $meta_course); 
          echo '****** Excerpt - ' . $message;
          $change = true;
        }
        if($long_description != strval($post['long_description'])){
          update_field('long_description', strval($post['long_description']), $meta_course); 
          echo '****** Long description - ' . $message;
          $change = true;
        }
      
        if($agenda != intval($post['agenda'])){
        update_field('agenda', strval($post['agenda']), $meta_course); 
        echo '****** Agenda - ' . $message;
        $change = true;
        }

        if($degree != intval($post['degree'])){
          update_field('degree', strval($post['degree']), $meta_course); 
          echo '****** Degree - ' . $message;
          $change = true;
        }
        
        if(!$change)
          echo '*** ~ *** No change found for this course ! *** ~ ***<br><br>';
      
        /*
        ** Available in next version
        if($data_locaties_xml == intval($post['prijs']))
        echo 'Data en locaties - ' . $message;
        */

      }

    }
}

echo "<h2 class='titleGroupText'> End .</h2>";



  

?>

</body>
</html> 
